on:
  workflow_call:
    secrets:
      discord_webhook:
        required: true
        description: "value of the webhook to use for sending to discord"
      MINIO_ACCESS_KEY:
        required: true
        description: "variable for accessing minio for cache and build artifacts"
      MINIO_SECRET_KEY:
        required: true
        description: "variable for accessing minio for cache and build artifacts"
      MINIO_ENDPOINT:
        required: true
        description: "variable for accessing minio for cache and build artifacts"

    inputs:
      success:
        required: true
        type: boolean
        description: "if the particular embed should send as a success or not."
      ping_role_id:
        required: true
        type: string
        description: "the id of the role to ping."
      env_variant:
        required: true
        type: string
        description: "what environment the event occurred in."
      failure_reason:
        required: true
        type: string
        description: "what environment the event occurred in."
      github_repository:
        required: true
        type: string
        description: "the repository in question."
      github_server_url:
        required: true
        type: string
        description: "the github server url."
      github_run_id:
        required: true
        type: string
        description: "the run ID."

jobs:
  deployContainers:
    timeout-minutes: 2
    runs-on: self-hosted

    steps:
      - uses: autometrics-dev/instrument-pipeline@v0
        name: instrument
        with:
          pushgateway: http://prom-aggregation-gateway.op-metrics:8080/metrics/action/discord_notif/repo/${{ github.event.repository.name }}
      - name: Discord Success Notification
        uses: sebastianpopp/discord-action@releases/v2
        if: ${{ inputs.success }}
        with:
          webhook: ${{ secrets.discord_webhook }}
          message: |
            [${{ inputs.github_repository }}](https://github.com/streemtech/${{ inputs.github_repository }}) deployed to `${{ inputs.env_variant }}`
      - name: Discord Success Notification
        uses: sebastianpopp/discord-action@releases/v2
        if: "contains(github.event.head_commit.message, '#skipTest') && inputs.success"
        with:
          webhook: ${{ secrets.discord_webhook }}
          message: |
            ${{ inputs.ping_role_id }} [${{ inputs.github_repository }}](https://github.com/streemtech/${{ inputs.github_repository }}) deployed with tests skipped`

      - name: Discord Fail Notification
        uses: sebastianpopp/discord-action@releases/v2
        if: ${{ !inputs.success }}
        with:
          webhook: ${{ secrets.discord_webhook }}
          message: |
            # ${{ inputs.github_repository }} Deployment Failure
            [${{ inputs.github_repository }}](https://github.com/streemtech/${{ inputs.github_repository }}) has failed in deploying to `${{ inputs.env_variant }}`
            See [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details
            ${{ inputs.ping_role_id }}
