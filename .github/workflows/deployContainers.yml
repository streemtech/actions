on:
  workflow_call:
    secrets:
      VPN_CONFIG:
        required: true
        description: "VPN configuration file text"
      KUBE_CONFIG:
        required: true
        description: "Kubernetes configuration file text"
      # OVPN_CLIENT_KEY:
      #   required: true
      #   description: "the certificate key"

    inputs:
      check_ip:
        required: true
        type: string
        description: "the IP pinged to check for a proper VPN connection."
      services:
        required: true
        type: string
        description: "a json array of service strings to call this workflow against."
      contexts:
        required: false
        type: string
        description: "a json array of kubernetes contexts to check out to deploy against. Defaults to k28."
        default: '["k28"]'
      docker_registry_repo:
        required: true
        type: string
        description: "the repository of the registry to send the containers to"
      docker_registry:
        required: true
        type: string
        description: "destination docker registry"
      kube_version:
        required: true
        type: string
        description: "the kubernetes version used in azure."
      kube_namespace:
        required: true
        type: string
        description: "one of qa-test, qa-prod, test, prod. Determines the tags used in the docker containers."
      tag:
        description: "the tag used for the deployment container"
        required: true
        type: string
      deployment_prefix:
        description: "the prefix used before the deployment name deployment/<PREFIX>asdf-deployment"
        required: true
        type: string
#Reusable Workflow. Not a composite action unf.

jobs:
  deployContainers:
    timeout-minutes: 2
    strategy:
      matrix:
        # service: ${{fromJson(inputs.services)}}
        context: ${{fromJson(inputs.contexts)}}
    runs-on: self-hosted

    steps:
      - uses: autometrics-dev/instrument-pipeline@v0
        name: instrument
        with:
          pushgateway: http://prom-aggregation-gateway.op-metrics:8080/metrics/action/deploy_container/context/${{ matrix.context }}/repo/${{ github.event.repository.name }}
      - uses: azure/setup-kubectl@v4
        with:
          version: "v1.31.1"

      #   - name: Install OpenVPN
      #     run: |
      #       sudo apt update
      #       sudo apt install -y openvpn openvpn-systemd-resolved

      #   - run: 'echo "$VPN_CONFIG" > ./config.ovpn'
      #     name: create ovpn file
      #     shell: bash
      #     env:
      #       VPN_CONFIG: ${{secrets.VPN_CONFIG}}

      #   - name: Connect to VPN
      #     uses: "kota65535/github-openvpn-connect-action@v1"
      #     with:
      #       config_file: ./config.ovpn
      #       # client_key: ${{ secrets.OVPN_CLIENT_KEY }}

      - run: 'echo "$KUBE_CONFIG" > ~/.kube.config'
        name: create kube config file
        shell: bash
        env:
          KUBE_CONFIG: ${{secrets.KUBE_CONFIG}}

      - run: |
          echo setting context to ${{ matrix.context }}
          kubectl config use-context ${{ matrix.context }} --kubeconfig ~/.kube.config
        name: set context
        shell: bash
        env:
          KUBE_CONFIG: ${{secrets.KUBE_CONFIG}}

      - name: update and reset image
        run: |

          echo '${{inputs.services}}' | jq -r -c '.[]' | while read i; do
            kubectl --namespace=${{ inputs.kube_namespace }} --kubeconfig ~/.kube.config \
            set image deployment/${{inputs.deployment_prefix}}$i-deployment \
            ${{inputs.deployment_prefix}}$i=${{ inputs.docker_registry }}/${{ inputs.docker_registry_repo }}/$i:${{ inputs.tag }}
          done

      - name: deploy
        run: |
          echo '${{inputs.services}}' | jq -r -c '.[]' | while read i; do
            kubectl --namespace=${{ inputs.kube_namespace }} --kubeconfig ~/.kube.config \
            rollout restart deployment/${{inputs.deployment_prefix}}$i-deployment
          done
