on:
  workflow_call:
    secrets:
      REGISTRY_USERNAME:
        required: true
        description: the username for the registry
      REGISTRY_PASSWORD:
        required: true
        description: the password for the registry
      GITHUB_AUTH_TOKEN:
        required: true
        description: "the token used to pull data from github, and checkout as needed."

    inputs:
      e2eFolders:
        required: true
        type: string
        description: "a json array of the folders to cd into to run end to end tests against. Each folder must have a makefile with 'logs', 'wait', 'test-pre', and 'test-post', along with a override.yml dockerfile."
      go_private:
        description: "the string sent to GOPRIVATE env var"
        type: string
        required: true

jobs:
  #************* END TO END TESTS ***************
  endToEndTests:
    timeout-minutes: 60
    # strategy:
    #   matrix:
    #     folder: ${{fromJson(inputs.e2eFolders)}}
    env:
      GOPRIVATE: ${{inputs.go_private}}
    runs-on: self-hosted

    steps:
      - uses: autometrics-dev/instrument-pipeline@v0
        name: instrument
        with:
          pushgateway: http://prom-aggregation-gateway.op-metrics:8080/metrics/action/end_to_end/repo/${{ github.event.repository.name }}
      # - name: Setup config
      #   shell: bash
      #   id: setup-config
      #   run: |
      #     sudo mkdir -p /etc/docker
      #     cat <<EOF | sudo tee /etc/docker/daemon.json
      #     {
      #         "registry-mirrors": ["https://registry.streem.tech"]
      #     }
      #     EOF
      # - name: Reload Docker
      #   shell: bash
      #   id: reload-docker
      #   run: |
      #     sudo cat /etc/docker/daemon.json
      #     sudo systemctl daemon-reload && sudo systemctl restart docker

      - name: checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup git config
        run: git config --global url."https://x-oauth-basic:${{ secrets.GITHUB_AUTH_TOKEN }}@github.com".insteadOf "https://github.com"

      - name: Login to Harbor
        if: "!contains(github.event.head_commit.message, '#skipTest')"
        uses: docker/login-action@v3
        with:
          registry: harbor.streem.tech
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      #Still setting up golang so the tests can be compiled and executed here.
      - name: Setup Golang
        if: "!contains(github.event.head_commit.message, '#skipTest')"
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"
          check-latest: true
          cache: false

      #Start setup for NODE
      - name: Node Setup (needed for terraform?)
        uses: actions/setup-node@v3
        with:
          node-version: lts/*

      - name: Set Up Terraform
        if: "!contains(github.event.head_commit.message, '#skipTest')"
        uses: hashicorp/setup-terraform@v3

        # Checks if a full dockerfile exists to use.
      - name: Check dockerfile
        if: "!contains(github.event.head_commit.message, '#skipTest')"
        id: check_docker_files
        uses: andstor/file-existence-action@v1
        with:
          files: "./end-to-end/docker-compose.yml"

      - name: Check makefile
        if: "!contains(github.event.head_commit.message, '#skipTest')"
        id: check_makefile
        uses: andstor/file-existence-action@v1
        with:
          files: "./end-to-end/makefile"

      - name: run startup command so all of the services are ready.
        run: make startup
        working-directory: ./end-to-end
        if: steps.check_makefile.outputs.files_exists == 'true' && !contains(github.event.head_commit.message, '#skipTest')

      - name: docker up
        if: steps.check_docker_files.outputs.files_exists == 'true' && !contains(github.event.head_commit.message, '#skipTest')
        run: docker compose -f ./end-to-end/docker-compose.yml up --wait --quiet-pull -d
        env:
          TAG: ${{ github.sha }}

      - name: list all containers
        if: "!contains(github.event.head_commit.message, '#skipTest')"
        run: docker ps -a

      - name: Wait for results to be up
        run: make wait
        working-directory: ./end-to-end
        if: steps.check_makefile.outputs.files_exists == 'true' && !contains(github.event.head_commit.message, '#skipTest')

      - name: Run integration tests
        run: make integ
        working-directory: ./end-to-end
        if: steps.check_makefile.outputs.files_exists == 'true' && !contains(github.event.head_commit.message, '#skipTest')

      - name: Test
        if: steps.check_makefile.outputs.files_exists == 'true' && !contains(github.event.head_commit.message, '#skipTest')
        uses: robherley/go-test-action@v0
        env:
          E2E: true
        with:
          testArguments: " -v ./end-to-end/..."

      - name: output logs
        if: ${{ failure() }}
        working-directory: ./end-to-end
        run: |
          docker ps
          echo "******************************************"
          make logs

      - name: docker down
        run: docker compose -f ./end-to-end/docker-compose.yml down || docker compose -f ./end-to-end/docker-compose.yml rm || true
        if: always()
